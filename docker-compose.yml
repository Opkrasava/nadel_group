version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: symfony_app
    restart: unless-stopped
    volumes:
      - .:/app
    environment:
      APP_ENV: dev
      DATABASE_URL: mysql://symfony:symfony@mysql:3306/symfony
    depends_on:
      - mysql

  mysql:
    image: mysql:8.0
    container_name: symfony_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: symfony
      MYSQL_USER: symfony
      MYSQL_PASSWORD: symfony
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - dump_data:/dump
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-u", "root", "-proot"]
      timeout: 10s
      retries: 5

  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw

  nginx:
    image: nginx:latest
    container_name: symfony_nginx
    restart: unless-stopped
    ports:
      - "8030:80"
    depends_on:
      - app
    volumes:
      - ./nginx/conf/default.conf:/etc/nginx/conf.d/default.conf:ro
      - .:/app
      - ./nginx/conf:/etc/nginx/conf.d
      - ./nginx/logs:/var/log/nginx

volumes:
  mysql_data:
  database_data:
  dump_data: